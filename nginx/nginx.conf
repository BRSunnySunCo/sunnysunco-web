# 全局配置
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# 事件模块配置
events {
    worker_connections 1024;
}

# HTTP 模块配置
http {
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 3600;
    types_hash_max_size 2048;

#     server {
#         # 监听 80 端口
#         listen 80;
#         # 填写绑定的域名
#         server_name _;
#         # 重定向到 HTTPS
#         return 301 https://$server_name$request_uri;
#     }

#     server {
#         #SSL 默认访问端口号为 443
#         listen 443 ssl;
#         #请填写绑定证书的域名
#         server_name _;
#         ssl_session_timeout 5m;
#         #请按照以下协议配置
#         ssl_protocols TLSv1.2 TLSv1.3;
#         #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
#         ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
#         ssl_prefer_server_ciphers on;
#
#         # ssl证书地址
#         #请填写证书文件的相对路径或绝对路径
#         ssl_certificate /usr/share/nginx/server_name_nginx/server_name_bundle.crt;
#         #请填写私钥文件的相对路径或绝对路径
#         ssl_certificate_key /usr/share/nginx/server_name_nginx/server_name.key;
#
#         location / {
#             add_header Cache-Control "no-cache, no-store, must-revalidate";
#             add_header Pragma "no-cache";
#             add_header Expires 0;
#
#             try_files $uri $uri/ /index.html;
#         }
#     }
    server {
        listen 80;
        server_name _;

        location /api {
            proxy_pass http://server:8080/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://client:3000;
        }
    }
}
